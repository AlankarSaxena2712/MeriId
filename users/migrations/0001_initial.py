# Generated by Django 3.2.12 on 2022-08-16 19:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=10, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('kyc', 'Kyc'), ('other', 'Other'), ('pan', 'Pan'), ('aadhar', 'Aadhar'), ('video', 'Video'), ('pending', 'Pending'), ('disabled', 'Disabled')], default='kyc', max_length=255)),
                ('kyc_status', models.BooleanField(default=False, help_text='False for (aadhar, pan and video) else True for (other and video)')),
                ('aadhar_limit', models.IntegerField(default=5)),
                ('profile', models.URLField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('operator', 'Operator'), ('user', 'User'), ('admin', 'Admin')], default='user', max_length=30)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_line_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=6)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kyc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhar_card', models.URLField(blank=True, max_length=255, null=True)),
                ('pan_card', models.URLField(blank=True, max_length=255, null=True)),
                ('other_documents', models.URLField(blank=True, max_length=255, null=True)),
                ('video_link', models.URLField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('punch_in', models.TimeField()),
                ('punch_out', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('present', 'present'), ('absent', 'absent')], default='absent', max_length=255)),
                ('slot_10_to_11', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_11_to_12', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_12_to_1', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_1_to_2', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_2_to_3', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_3_to_4', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_4_to_5', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('slot_5_to_6', models.BooleanField(default=False, help_text='False if operator is busy in this slot else True')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.address'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
